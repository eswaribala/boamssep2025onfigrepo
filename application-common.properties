#data source connection pool
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=12
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000



# Choose active schema at startup (VM arg/env can override)
#app.active-schema=${APP_ACTIVE_SCHEMA:payment}   # -Dapp.active-schema=loan
#
## Do NOT set spring.datasource.*; custom @Primary DataSource beans will handle it
#app.datasource.payment.jdbc-url=jdbc:mysql://localhost:3306/paymentdb
#app.datasource.payment.username=root
#app.datasource.payment.password=vignesh
#app.datasource.payment.driver-class-name=com.mysql.cj.jdbc.Driver
#
#app.datasource.loan.jdbc-url=jdbc:mysql://localhost:3306/loandb
#app.datasource.loan.username=root
#app.datasource.loan.password=vignesh
#app.datasource.loan.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

management.endpoints.web.exposure.include=*

#jpa properties
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=default
spring.jpa.show-sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.orm.jdbc.bind=TRACE
#DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false
spring.datasource.generate-unique-name=false
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jackson.serialization.fail-on-empty-beans=false
spring.main.allow-circular-references=true
#spring.devtools.restart.enabled=false
#spring.devtools.restart.additional-exclude=com/boa/userservice/logging/**
server.port=7076

# GraphQL
#graphql
graphql.graphiql.mapping=/graphiql
graphql.graphiql.endpoint.graphql=/graphql
graphql.graphiql.enabled=true

graphql.tools.schema-location-pattern=**/*.graphqls
#eureka client properties
eureka.client.serviceUrl.defaultZone=http://host.docker.internal:8761/eureka
eureka.client.fetch-registry=false
eureka.client.healthcheck.enabled=true
eureka.client.register-with-eureka=true
eureka.instance.lease-expiration-duration-in-seconds=2
eureka.instance.lease-renewal-interval-in-seconds=2
eureka.instance.hostname=host.docker.internal
eureka.instance.prefer-ip-address= true
eureka.instance.ip-address=host.docker.internal
